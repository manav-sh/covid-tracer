{"version":3,"sources":["functions.js","Table.js","Chart.js","App.js","index.js"],"names":["sortTData","data","sortedData","sort","a","b","cases","Table","countries","selectedCountry","className","map","country","countryInfo","id","iso3","onClick","e","target","Intl","NumberFormat","format","Chart","CaseBox","props","style","backgroundColor","bg","color","text","title","total_count","today_count","App","useState","setCountries","setSelectedCountry","currentCountry","setCurrentCountry","tableData","setTableData","useEffect","fetch","then","json","name","code","getCountryData","url","setCountryData","currentDate","Date","onChange","value","countryCode","todayCases","active","deaths","todayDeaths","recovered","todayRecovered","class","marginBottom","getHours","getMinutes","getDate","getMonth","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f85f2a8.chunk.js","sourcesContent":["export const sortTData = (data) => {\r\n    const sortedData = [...data];\r\n    sortedData.sort((a , b) => {\r\n        if(a.cases > b.cases) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n    return sortedData;\r\n}","import React from 'react'\r\nimport './Table.css'\r\n\r\nexport const Table = ({countries , selectedCountry}) => {\r\n    return (\r\n        <div className=\"tableData\">\r\n            <tr className=\"table-row diff-row\">\r\n                <th className=\"table-cell diff-cell\">Name</th>\r\n                <th className=\"table-cell diff-cel\">Cases</th>\r\n            </tr>\r\n            {\r\n                countries.map(({country , cases, countryInfo}) => (\r\n                    <tr className=\"table-row\">\r\n                        <td className=\"table-cell\" id={countryInfo.iso3} onClick={(e) => {selectedCountry = e.target.id}}>{country}</td>\r\n                        <td className=\"table-cell\">{Intl.NumberFormat('en-US').format(cases)}</td>\r\n                    </tr>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React , {useState , useEffect} from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nfunction Chart({countryCode}) {\r\n    const [graphdata, setGraphData] = useState({});\r\n    useEffect(() => {\r\n        const countryGraph = async () => {\r\n            const graphlink = (countryCode === \"WWE\" ? \"https://disease.sh/v3/covid-19/historical/all?lastdays=30\" : `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=30`);\r\n\r\n            await fetch(graphlink)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                (countryCode === \"WWE\") ? setGraphData(data) : setGraphData(data.timeline);\r\n            });\r\n        }\r\n        console.log(graphdata);\r\n        countryGraph();\r\n    } , [countryCode]);\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import './App.css';\nimport './CaseBoxes.css';\nimport { sortTData } from './functions';\n// import {MenuItem , FormControl} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { Table } from './Table';\nimport Chart from './Chart';\n\n// 7-16 Individual container for showing cases, Like Deaths, Active, etc.\nconst CaseBox = (props) => {\n  \n  return(\n    <div className=\"caseBox\" style={{backgroundColor: props.bg , color: props.text}}>\n      <div className=\"case-title\">{props.title}</div>\n      <div className=\"case-count\">{Intl.NumberFormat('en-US').format(props.total_count)}</div>\n      <div className=\"case-today\">+{props.today_count} today</div>\n      {/* <Chart countryCode={props.countryCode} /> */}\n    </div>\n  )\n}\n//The main funciton that renders the whole UI \nfunction App() {\n\n  const [countries , setCountries] = useState([]);\n  const [selectedCountry , setSelectedCountry] = useState(\"WWE\");\n  const [currentCountry , setCurrentCountry] = useState({});\n  const [tableData , setTableData] = useState([]);\n  \n  // 27-46 Hook 1 -- to fetch the country name and code from API for the Dropdown box.\n  useEffect(\n    () => {\n      const getCountryData = async () => {\n        await fetch('https://disease.sh/v3/covid-19/countries')\n        .then((data) => data.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name: country.country ,\n              code: country.countryInfo.iso3 ,\n            }\n          ));\n          const sortedData = sortTData(data);\n          setCountries(countries);\n          setTableData(sortedData);\n        });\n      }\n      getCountryData();\n    } ,\n    []\n  );\n  \n  // 49-?? Hook 2 -- This hook is used to get the particular country info when dropdown is selected. and changes the data of currentCountry, which is used to show the CaseBoxes value.\n  useEffect(\n      () => {\n        const setCountryData = async () => {\n        const url = ( selectedCountry === \"WWE\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${selectedCountry}` );\n\n        await fetch(url)\n        .then((data) => data.json())\n        .then((data) => {\n          \n          setCurrentCountry(data);\n        });\n\n        }\n        setCountryData();\n    } ,\n    [selectedCountry]\n  );\n  const currentDate = new Date();\n  const month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\n  // The whole stuff abt what to show in UI\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        COVID-19 Cases Tracker\n      </div>\n      <div className=\"country-selection\">\n        <div className=\"country-title\">\n          Search a country:\n        </div>\n        <br className=\"country-newline\"/>\n        <div className=\"country-dropdown\">\n          <select name=\"country-search\" id=\"search\" className=\"country-search\" onChange={(e) => {setSelectedCountry(e.target.value)}} >\n            <option value=\"WWE\"> Worldwide</option>\n            {countries.map((country) => {\n              return <option value={country.code}>{country.name} ({country.code})</option>\n            })}\n          </select>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"left\">\n          <br />\n          <div className=\"case-boxes\">\n            <CaseBox countryCode={selectedCountry} title=\"Total Cases\" total_count={currentCountry.cases} today_count={currentCountry.todayCases} bg=\"#fddaa6e7\" text=\"#fb5e16\" />\n            <CaseBox countryCode={selectedCountry} title=\"Active Cases\" total_count={currentCountry.active} today_count={currentCountry.todayCases} bg=\"#ffa0a083\" text=\"#ff2626\" />\n            <CaseBox countryCode={selectedCountry} title=\"Deaths\" total_count={currentCountry.deaths} today_count={currentCountry.todayDeaths} bg=\"#5db7da63\" text=\"#0735b3\" />\n            <CaseBox countryCode={selectedCountry} title=\"Recovered\" total_count={currentCountry.recovered} today_count={currentCountry.todayRecovered} bg=\"#D5EEBB\" text=\"#0d7231\" />\n            {/* <CaseBox title=\"Vaccinated\" total_count=\"4,40,30,300\" bg=\"hsl(283, 100%, 89%)\" text=\"hsl(283, 93%, 39%)\" /> */}\n          </div>\n\n          <div className=\"last-updated\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{marginBottom: \"2px\"}}></i>&nbsp;Last Updated {currentDate.getHours()}:{currentDate.getMinutes()} | {currentDate.getDate()} {month[currentDate.getMonth()]}, {currentDate.getFullYear()}</div>\n        </div>\n        <div className=\"right\">\n          <h4>Live Cases by Country</h4>\n          <Table countries={tableData} selectedCountry={selectedCountry} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);"],"sourceRoot":""}