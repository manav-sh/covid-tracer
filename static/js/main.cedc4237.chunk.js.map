{"version":3,"sources":["App.js","index.js"],"names":["CaseBox","props","className","style","backgroundColor","bg","color","text","title","Intl","NumberFormat","format","total_count","today_count","App","useState","countries","setCountries","selectedCountry","setSelectedCountry","currentCountry","setCurrentCountry","useEffect","a","fetch","then","data","json","map","country","name","code","countryInfo","iso3","getCountryData","url","setCountryData","currentDate","Date","id","onChange","e","target","value","selected","cases","todayCases","active","deaths","todayDeaths","recovered","todayRecovered","class","marginBottom","getHours","getMinutes","getDate","getMonth","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"iRAMMA,EAAU,SAACC,GAIf,OACE,sBAAKC,UAAU,UAAUC,MAAO,CAACC,gBAAiBH,EAAMI,GAAKC,MAAOL,EAAMM,MAA1E,UACE,qBAAKL,UAAU,aAAf,SAA6BD,EAAMO,QACnC,qBAAKN,UAAU,aAAf,SAA6BO,KAAKC,aAAa,SAASC,OAAOV,EAAMW,eACrE,sBAAKV,UAAU,aAAf,cAA8BD,EAAMY,YAApC,gBAuFSC,MAlFf,WAEE,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+CF,mBAAS,OAAxD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA6CJ,mBAAS,IAAtD,mBAAOK,EAAP,KAAwBC,EAAxB,KAGAC,qBACE,YACsB,uCAAG,sBAAAC,EAAA,sEACfC,MAAM,4CACXC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACL,IAAMV,EAAYU,EAAKE,KAAI,SAACC,GAAD,MACzB,CACEC,KAAMD,EAAQA,QACdE,KAAMF,EAAQG,YAAYC,SAG9BhB,EAAaD,MAVM,2CAAH,qDAapBkB,KAEF,IAIFZ,qBACI,YACsB,uCAAG,4BAAAC,EAAA,6DACjBY,EAA4B,QAApBjB,EAA4B,qCAA5B,mDAA+GA,GADtG,SAGjBM,MAAMW,GACXV,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACLL,EAAkBK,MANG,2CAAH,qDAUpBU,KAEJ,CAAClB,IAEH,IAAMmB,EAAc,IAAIC,KAGxB,OACE,sBAAKpC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,oCAIA,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAf,+BAGA,oBAAIA,UAAU,oBACd,qBAAKA,UAAU,mBAAf,SACE,yBAAQ4B,KAAK,iBAAiBS,GAAG,SAASrC,UAAU,iBAAiBsC,SAAU,SAACC,GAAOtB,EAAmBsB,EAAEC,OAAOC,QAAnH,UACE,wBAAQA,MAAM,MAAMC,UAAQ,EAA5B,wBACC5B,EAAUY,KAAI,SAACC,GACd,OAAO,yBAAQc,MAAOd,EAAQE,KAAvB,UAA8BF,EAAQC,KAAtC,KAA8CD,EAAQE,KAAtD,kBAKf,uBACA,sBAAK7B,UAAU,aAAf,UACE,cAAC,EAAD,CAASM,MAAM,cAAcI,YAAaQ,EAAeyB,MAAOhC,YAAaO,EAAe0B,WAAYzC,GAAG,YAAYE,KAAK,YAC5H,cAAC,EAAD,CAASC,MAAM,eAAeI,YAAaQ,EAAe2B,OAAQlC,YAAaO,EAAe0B,WAAYzC,GAAG,YAAYE,KAAK,YAC9H,cAAC,EAAD,CAASC,MAAM,SAASI,YAAaQ,EAAe4B,OAAQnC,YAAaO,EAAe6B,YAAa5C,GAAG,YAAYE,KAAK,YACzH,cAAC,EAAD,CAASC,MAAM,YAAYI,YAAaQ,EAAe8B,UAAWrC,YAAaO,EAAe+B,eAAgB9C,GAAG,UAAUE,KAAK,eAIlI,sBAAKL,UAAU,eAAf,UAA8B,mBAAGkD,MAAM,gBAAgB,cAAY,OAAOjD,MAAO,CAACkD,aAAc,SAAhG,oBAAgIhB,EAAYiB,WAA5I,IAAyJjB,EAAYkB,aAArK,MAAsLlB,EAAYmB,UAAlM,IA/BU,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OA+BuInB,EAAYoB,YAAhO,KAA+OpB,EAAYqB,qBC1FjQC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cedc4237.chunk.js","sourcesContent":["import './App.css';\nimport './CaseBoxes.css';\n// import {MenuItem , FormControl} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\n\n// 7-16 Individual container for showing cases, Like Deaths, Active, etc.\nconst CaseBox = (props) => {\n  // function numberWithCommas(x) {\n  //   return String(x).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  // }\n  return(\n    <div className=\"caseBox\" style={{backgroundColor: props.bg , color: props.text}}>\n      <div className=\"case-title\">{props.title}</div>\n      <div className=\"case-count\">{Intl.NumberFormat('en-US').format(props.total_count)}</div>\n      <div className=\"case-today\">+{props.today_count} today</div>\n    </div>\n  )\n}\n//The main funciton that renders the whole UI \nfunction App() {\n\n  const [countries , setCountries] = useState([]);\n  const [selectedCountry , setSelectedCountry] = useState(\"WWE\");\n  const [currentCountry , setCurrentCountry] = useState({});\n  \n  // 27-46 Hook 1 -- to fetch the country name and code from API for the Dropdown box.\n  useEffect(\n    () => {\n      const getCountryData = async () => {\n        await fetch('https://disease.sh/v3/covid-19/countries')\n        .then((data) => data.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name: country.country ,\n              code: country.countryInfo.iso3 ,\n            }\n          ));\n          setCountries(countries);\n        });\n      }\n      getCountryData();\n    } ,\n    []\n  );\n  \n  // 49-?? Hook 2 -- This hook is used to get the particular country info when dropdown is selected. and changes the data of currentCountry, which is used to show the CaseBoxes value.\n  useEffect(\n      () => {\n        const setCountryData = async () => {\n        const url = ( selectedCountry === \"WWE\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${selectedCountry}` );\n\n        await fetch(url)\n        .then((data) => data.json())\n        .then((data) => {\n          setCurrentCountry(data);\n        });\n\n        }\n        setCountryData();\n    } ,\n    [selectedCountry]\n  );\n  const currentDate = new Date();\n  const month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n  // The whole stuff abt what to show in UI\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        COVID-19 Cases Tracker\n      </div>\n\n      <div className=\"country-selection\">\n        <div className=\"country-title\">\n          Search a country:\n        </div>\n        <br className=\"country-newline\"/>\n        <div className=\"country-dropdown\">\n          <select name=\"country-search\" id=\"search\" className=\"country-search\" onChange={(e) => {setSelectedCountry(e.target.value)}} >\n            <option value=\"WWE\" selected> Worldwide</option>\n            {countries.map((country) => {\n              return <option value={country.code}>{country.name} ({country.code})</option>\n            })}\n          </select>\n        </div>\n      </div>\n      <br />\n      <div className=\"case-boxes\">\n        <CaseBox title=\"Total Cases\" total_count={currentCountry.cases} today_count={currentCountry.todayCases} bg=\"#fddaa6e7\" text=\"#fb5e16\" />\n        <CaseBox title=\"Active Cases\" total_count={currentCountry.active} today_count={currentCountry.todayCases} bg=\"#ffa0a083\" text=\"#ff2626\" />\n        <CaseBox title=\"Deaths\" total_count={currentCountry.deaths} today_count={currentCountry.todayDeaths} bg=\"#5db7da63\" text=\"#0735b3\" />\n        <CaseBox title=\"Recovered\" total_count={currentCountry.recovered} today_count={currentCountry.todayRecovered} bg=\"#D5EEBB\" text=\"#0d7231\" />\n        {/* <CaseBox title=\"Vaccinated\" total_count=\"4,40,30,300\" bg=\"hsl(283, 100%, 89%)\" text=\"hsl(283, 93%, 39%)\" /> */}\n      </div>\n\n      <div className=\"last-updated\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{marginBottom: \"2px\"}}></i>&nbsp;Last Updated {currentDate.getHours()}:{currentDate.getMinutes()} | {currentDate.getDate()} {month[currentDate.getMonth()]}, {currentDate.getFullYear()}</div>\n      {/* <div className=\"wdth\"> Width = {window.innerWidth} , Height = {window.innerHeight}</div> */}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);"],"sourceRoot":""}